steps:
  # Step 1: Restore, Build, and Pack the project
  - name: 'mcr.microsoft.com/dotnet/sdk:7.0'
    id: 'Build and Pack'
    entrypoint: bash
    args:
      - -c
      - |
        dotnet restore MyApp.csproj
        dotnet build MyApp.csproj -c Release
        dotnet pack MyApp.csproj -c Release -o nupkgs
        ls -l nupkgs

  # Step 2: Upload .nupkg file(s) to GCS bucket
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Upload NuGet Package to GCS'
    entrypoint: bash
    args:
      - -c
      - |
        gsutil cp nupkgs/*.nupkg gs://my-dotnet-packages1/

  # Step 3: Create BaGet VM if not exists
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Create BaGet VM if not exists'
    entrypoint: bash
    args:
      - -c
      - |
        VM_EXISTS=$(gcloud compute instances list --filter="name=('baget-vm')" --zones=asia-south1-c --format="value(name)")
        if [ -z "$VM_EXISTS" ]; then
          echo "Creating VM baget-vm..."
          gcloud compute instances create baget-vm \
            --zone=asia-south1-c \
            --machine-type=e2-medium \
            --image-family=debian-11 \
            --image-project=debian-cloud \
            --boot-disk-size=20GB \
            --tags=http-server \
            --metadata=startup-script='#!/bin/bash
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo usermod -aG docker $USER
              newgrp docker'
        else
          echo "VM already exists, skipping creation."
        fi

  # Step 4: Copy Dockerfile and baget-key.json to the VM
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Copy Dockerfile and Key'
    entrypoint: bash
    args:
      - -c
      - |
        mkdir temp-baget
        cp Dockerfile temp-baget/
        cp baget-key.json temp-baget/
        gcloud compute scp --recurse temp-baget baget-vm:~/baget --zone=asia-south1-c

  # Step 5: SSH into VM, build Docker image, and run BaGet server
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Run BaGet Docker'
    entrypoint: bash
    args:
      - -c
      - |
        gcloud compute ssh baget-vm --zone=asia-south1-c --command='
          cd ~/baget/temp-baget &&
          docker build -t baget-custom . &&
          docker run -d --name baget-server \
            -p 8080:8080 \
            -v ~/baget/temp-baget/baget-key.json:/secrets/gcp/key.json:ro \
            -e ASPNETCORE_ENVIRONMENT=Production \
            -e BAGET__Storage__Type=GoogleCloudStorage \
            -e BAGET__Storage__GoogleCloudStorage__Bucket=my-dotnet-packages1 \
            -e GOOGLE_APPLICATION_CREDENTIALS=/secrets/gcp/key.json \
            -e ASPNETCORE_URLS=http://+:8080 \
            baget-custom
        '

timeout: 1800s

options:
  logging: CLOUD_LOGGING_ONLY
